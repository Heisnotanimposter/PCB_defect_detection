# -*- coding: utf-8 -*-
"""pcb_defect_detection

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S9k7AaXkgLnBXewKRVMzEhUeoSmBdSZp

#import and extracting
"""

from glob import glob
import yaml

#!curl -L "https://universe.roboflow.com/ds/WzSLKDgosa?key=XDbBH5Sm1Y" > roboflow.zip; unzip roboflow.zip; rm roboflow.zip
!curl -L "https://universe.roboflow.com/ds/dibOecNafs?key=xmuQbVRbj9" > roboflow.zip; unzip roboflow.zip; rm roboflow.zip

!git clone https://github.com/ultralytics/yolov5.git

!pip install -r /content/yolov5/requirements.txt

!mkdir /content/dataset/
!mv /content/* /content/dataset/

from glob import glob

train_img_list = glob('/content/dataset/train/images/*.jpg')
val_img_list = glob('/content/dataset/valid/images/*.jpg')

print(len(train_img_list), len(val_img_list))

with open('/content/dataset/train.txt', 'w') as f:
  f.write('\n'.join(train_img_list)+'\n')

with open('/content/dataset/val.txt', 'w') as f:
  f.write('\n'.join(val_img_list)+'\n')

#data['train'] = '/content/train.txt'
#data['val'] = '/content/val.txt'

"""
with open('/content/dataset/data.yaml', 'w') as f:
  yaml.dump(data, f)

!cat /content/dataset/data.yaml
"""

with open('/content/dataset/data.yaml','r') as f:
  data = yaml.safe_load(f)

data

data['train'] = '/content/dataset/train.txt'

data['val'] = '/content/dataset/val.txt'

data

with open('/content/dataset/data.yaml', 'w') as f:
  yaml.dump(data, f)

# Commented out IPython magic to ensure Python compatibility.
# %cat '/content/dataset/data.yaml' #문서를 출력해주는 명령어

!python /content/dataset/yolov5/train.py --img 128 --batch 32 --epochs 50 --data /content/dataset/data.yaml --cfg /content/dataset/yolov5/models/yolov5x.yaml --weights yolov5x.pt --name total_result

!cp -r /content/dataset/yolov5/runs/train/total_result ./content/drive/MyDrive/AI_course high/pcbdetection/

# Commented out IPython magic to ensure Python compatibility.
# %load_ext tensorboard
# %tensorboard --logdir /content/dataset/yolov5/runs/

"""
proto
!curl -L "https://universe.roboflow.com/ds/EjcVpm5haj?key=JjZGdzi1Og" > roboflow1.zip; unzip roboflow1.zip; rm roboflow1.zip
!curl -L "https://universe.roboflow.com/ds/oGmLZmkouIo9AsbC2GUu" > roboflow2.zip; unzip roboflow2.zip; rm roboflow2.zip
!curl -L "https://universe.roboflow.com/ds/JWJYON8RE7?key=f67Q0V58KG" > roboflow3.zip; unzip roboflow3.zip; rm roboflow3.zip
"""


"""
!curl -L "https://universe.roboflow.com/ds/iLxBlDtJGQ?key=ugSAqCBEso" > roboflow.zip; unzip roboflow.zip; rm roboflow.zip,potholedetect
!curl -L "https://universe.roboflow.com/ds/ONVOVKabRS?key=j04qQnvGem" > roboflow.zip; unzip roboflow.zip; rm roboflow.zip,crackdetect
"""

"""
!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="oGmLZmkouIo9AsbC2GUu")
project = rf.workspace("pawel-brzozowski").project("cyclists_database")
dataset = project.version(5).download("yolov5")
"""

